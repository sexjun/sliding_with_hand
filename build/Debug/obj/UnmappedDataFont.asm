; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\TouchGFXProjects\MyApplication_4\build\Debug\obj\UnmappedDataFont.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?glyphNodeBuffer@UnmappedDataFont@touchgfx@@1UGlyphNode@2@A ; touchgfx::UnmappedDataFont::glyphNodeBuffer
_BSS	SEGMENT
?glyphNodeBuffer@UnmappedDataFont@touchgfx@@1UGlyphNode@2@A DB 0eH DUP (?) ; touchgfx::UnmappedDataFont::glyphNodeBuffer
_BSS	ENDS
msvcjmc	SEGMENT
__83BC9379_Types@hpp DB 01H
__74585C90_Unicode@hpp DB 01H
__1D174C65_Font@hpp DB 01H
__97B5739F_UnmappedDataFont@hpp DB 01H
__DCBE0B52_FontManager@hpp DB 01H
__17A353E0_ApplicationFontProvider@hpp DB 01H
__0C0F9DA5_FlashDataReader@hpp DB 01H
__551DC49D_UnmappedDataFont@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::kerningTablePos
PUBLIC	??1Font@touchgfx@@UAE@XZ			; touchgfx::Font::~Font
PUBLIC	?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z	; touchgfx::Font::getGlyph
PUBLIC	?getFallbackChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFallbackChar
PUBLIC	?getEllipsisChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getEllipsisChar
PUBLIC	?getFontHeight@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFontHeight
PUBLIC	?getMinimumTextHeight@Font@touchgfx@@UBEGXZ	; touchgfx::Font::getMinimumTextHeight
PUBLIC	?getBitsPerPixel@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getBitsPerPixel
PUBLIC	?getByteAlignRow@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getByteAlignRow
PUBLIC	?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::Font::getKerning
PUBLIC	?getGSUBTable@Font@touchgfx@@UBEPBGXZ		; touchgfx::Font::getGSUBTable
PUBLIC	??0Font@touchgfx@@IAE@GEEEEEGG@Z		; touchgfx::Font::Font
PUBLIC	??_GFont@touchgfx@@UAEPAXI@Z			; touchgfx::Font::`scalar deleting destructor'
PUBLIC	??0UnmappedDataFont@touchgfx@@QAE@PBUGlyphNode@1@PBGGGEEEEEPBQBEPBUKerningNode@1@GGQBG@Z ; touchgfx::UnmappedDataFont::UnmappedDataFont
PUBLIC	?getGlyph@UnmappedDataFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ; touchgfx::UnmappedDataFont::getGlyph
PUBLIC	?getPixelData@UnmappedDataFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z ; touchgfx::UnmappedDataFont::getPixelData
PUBLIC	?getKerning@UnmappedDataFont@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::UnmappedDataFont::getKerning
PUBLIC	?getGSUBTable@UnmappedDataFont@touchgfx@@UBEPBGXZ ; touchgfx::UnmappedDataFont::getGSUBTable
PUBLIC	?lookupUnicode@UnmappedDataFont@touchgfx@@IBEHG@Z ; touchgfx::UnmappedDataFont::lookupUnicode
PUBLIC	??1UnmappedDataFont@touchgfx@@UAE@XZ		; touchgfx::UnmappedDataFont::~UnmappedDataFont
PUBLIC	??_GUnmappedDataFont@touchgfx@@UAEPAXI@Z	; touchgfx::UnmappedDataFont::`scalar deleting destructor'
PUBLIC	?getFlashReader@ApplicationFontProvider@@SAPAVFlashDataReader@touchgfx@@XZ ; ApplicationFontProvider::getFlashReader
PUBLIC	__JustMyCode_Default
PUBLIC	??_7Font@touchgfx@@6B@				; touchgfx::Font::`vftable'
PUBLIC	??_7UnmappedDataFont@touchgfx@@6B@		; touchgfx::UnmappedDataFont::`vftable'
PUBLIC	??_R4Font@touchgfx@@6B@				; touchgfx::Font::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFont@touchgfx@@@8			; touchgfx::Font `RTTI Type Descriptor'
PUBLIC	??_R3Font@touchgfx@@8				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Font@touchgfx@@8				; touchgfx::Font::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Font@touchgfx@@8			; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnmappedDataFont@touchgfx@@6B@		; touchgfx::UnmappedDataFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnmappedDataFont@touchgfx@@@8		; touchgfx::UnmappedDataFont `RTTI Type Descriptor'
PUBLIC	??_R3UnmappedDataFont@touchgfx@@8		; touchgfx::UnmappedDataFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnmappedDataFont@touchgfx@@8		; touchgfx::UnmappedDataFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnmappedDataFont@touchgfx@@8	; touchgfx::UnmappedDataFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?getStringWidth@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getCharWidth@Font@touchgfx@@UBEGG@Z:PROC	; touchgfx::Font::getCharWidth
EXTRN	?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ:PROC	; touchgfx::Font::getSpacingAbove
EXTRN	?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getMaxTextHeight
EXTRN	?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getNumberOfLines
EXTRN	??_EFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::Font::`vector deleting destructor'
EXTRN	??_EUnmappedDataFont@touchgfx@@UAEPAXI@Z:PROC	; touchgfx::UnmappedDataFont::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@UnmappedDataFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnmappedDataFont@touchgfx@@8 DD FLAT:??_R0?AVUnmappedDataFont@touchgfx@@@8 ; touchgfx::UnmappedDataFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnmappedDataFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2UnmappedDataFont@touchgfx@@8
rdata$r	SEGMENT
??_R2UnmappedDataFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@UnmappedDataFont@touchgfx@@8 ; touchgfx::UnmappedDataFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3UnmappedDataFont@touchgfx@@8
rdata$r	SEGMENT
??_R3UnmappedDataFont@touchgfx@@8 DD 00H		; touchgfx::UnmappedDataFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UnmappedDataFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnmappedDataFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVUnmappedDataFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::UnmappedDataFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnmappedDataFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4UnmappedDataFont@touchgfx@@6B@
rdata$r	SEGMENT
??_R4UnmappedDataFont@touchgfx@@6B@ DD 00H		; touchgfx::UnmappedDataFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnmappedDataFont@touchgfx@@@8
	DD	FLAT:??_R3UnmappedDataFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Font@touchgfx@@8 DD FLAT:??_R0?AVFont@touchgfx@@@8 ; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2Font@touchgfx@@8
rdata$r	SEGMENT
??_R2Font@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@Font@touchgfx@@8 ; touchgfx::Font::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Font@touchgfx@@8
rdata$r	SEGMENT
??_R3Font@touchgfx@@8 DD 00H				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@	; touchgfx::Font `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Font@touchgfx@@6B@
rdata$r	SEGMENT
??_R4Font@touchgfx@@6B@ DD 00H				; touchgfx::Font::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFont@touchgfx@@@8
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_7UnmappedDataFont@touchgfx@@6B@
CONST	SEGMENT
??_7UnmappedDataFont@touchgfx@@6B@ DD FLAT:??_R4UnmappedDataFont@touchgfx@@6B@ ; touchgfx::UnmappedDataFont::`vftable'
	DD	FLAT:??_EUnmappedDataFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:?getGlyph@UnmappedDataFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@UnmappedDataFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@UnmappedDataFont@touchgfx@@UBEPBGXZ
	DD	FLAT:?getPixelData@UnmappedDataFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
CONST	ENDS
;	COMDAT ??_7Font@touchgfx@@6B@
CONST	SEGMENT
??_7Font@touchgfx@@6B@ DD FLAT:??_R4Font@touchgfx@@6B@	; touchgfx::Font::`vftable'
	DD	FLAT:??_EFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:__purecall
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@Font@touchgfx@@UBEPBGXZ
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFlashReader@ApplicationFontProvider@@SAPAVFlashDataReader@touchgfx@@XZ
_TEXT	SEGMENT
?getFlashReader@ApplicationFontProvider@@SAPAVFlashDataReader@touchgfx@@XZ PROC ; ApplicationFontProvider::getFlashReader, COMDAT
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\include\fonts\ApplicationFontProvider.hpp
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __17A353E0_ApplicationFontProvider@hpp
	call	@__CheckForDebuggerJustMyCode@4
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFlashReader@ApplicationFontProvider@@SAPAVFlashDataReader@touchgfx@@XZ ENDP ; ApplicationFontProvider::getFlashReader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnmappedDataFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnmappedDataFont@touchgfx@@UAEPAXI@Z PROC		; touchgfx::UnmappedDataFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnmappedDataFont@touchgfx@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnmappedDataFont@touchgfx@@UAEPAXI@Z ENDP		; touchgfx::UnmappedDataFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1UnmappedDataFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1UnmappedDataFont@touchgfx@@UAE@XZ PROC		; touchgfx::UnmappedDataFont::~UnmappedDataFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UnmappedDataFont@touchgfx@@UAE@XZ ENDP		; touchgfx::UnmappedDataFont::~UnmappedDataFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lookupUnicode@UnmappedDataFont@touchgfx@@IBEHG@Z
_TEXT	SEGMENT
_mid$ = -44						; size = 4
_max$ = -32						; size = 4
_min$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?lookupUnicode@UnmappedDataFont@touchgfx@@IBEHG@Z PROC	; touchgfx::UnmappedDataFont::lookupUnicode, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\src\UnmappedDataFont.cpp
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __551DC49D_UnmappedDataFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 70
	mov	DWORD PTR _min$[ebp], 0
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	sub	ecx, 1
	mov	DWORD PTR _max$[ebp], ecx
; Line 73
	movzx	eax, WORD PTR _unicode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _min$[ebp]
	movzx	edx, WORD PTR [edx+ecx*2]
	sub	eax, edx
	add	eax, DWORD PTR _min$[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 74
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN4@lookupUnic
; Line 77
	or	eax, -1
	jmp	$LN1@lookupUnic
$LN4@lookupUnic:
; Line 79
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN2@lookupUnic
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _max$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	movzx	ecx, WORD PTR _unicode$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _max$[ebp]
	sub	edx, eax
	mov	DWORD PTR _mid$[ebp], edx
; Line 83
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN6@lookupUnic
; Line 86
	or	eax, -1
	jmp	$LN1@lookupUnic
$LN6@lookupUnic:
; Line 88
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN2@lookupUnic
; Line 91
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
$LN2@lookupUnic:
; Line 94
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jg	$LN3@lookupUnic
; Line 96
	movzx	eax, WORD PTR _unicode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _mid$[ebp]
	movzx	edx, WORD PTR [edx+ecx*2]
	cmp	eax, edx
	jne	SHORT $LN8@lookupUnic
; Line 99
	mov	eax, DWORD PTR _mid$[ebp]
	jmp	$LN1@lookupUnic
$LN8@lookupUnic:
; Line 101
	movzx	eax, WORD PTR _unicode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _mid$[ebp]
	movzx	edx, WORD PTR [edx+ecx*2]
	cmp	eax, edx
	jge	SHORT $LN9@lookupUnic
; Line 104
	mov	eax, DWORD PTR _mid$[ebp]
	sub	eax, 1
	mov	DWORD PTR _max$[ebp], eax
; Line 105
	mov	eax, DWORD PTR _max$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN11@lookupUnic
; Line 108
	jmp	$LN3@lookupUnic
$LN11@lookupUnic:
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _max$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	movzx	ecx, WORD PTR _unicode$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _max$[ebp]
	sub	edx, eax
	mov	DWORD PTR _mid$[ebp], edx
; Line 112
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN12@lookupUnic
; Line 115
	jmp	SHORT $LN3@lookupUnic
$LN12@lookupUnic:
; Line 117
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN13@lookupUnic
; Line 120
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
$LN13@lookupUnic:
; Line 122
	jmp	SHORT $LN10@lookupUnic
$LN9@lookupUnic:
; Line 126
	mov	eax, DWORD PTR _mid$[ebp]
	add	eax, 1
	mov	DWORD PTR _min$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN14@lookupUnic
; Line 130
	jmp	SHORT $LN3@lookupUnic
$LN14@lookupUnic:
; Line 133
	movzx	eax, WORD PTR _unicode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _min$[ebp]
	movzx	edx, WORD PTR [edx+ecx*2]
	sub	eax, edx
	add	eax, DWORD PTR _min$[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 134
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN15@lookupUnic
; Line 137
	jmp	SHORT $LN3@lookupUnic
$LN15@lookupUnic:
; Line 139
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN10@lookupUnic
; Line 142
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
$LN10@lookupUnic:
; Line 145
	jmp	$LN2@lookupUnic
$LN3@lookupUnic:
; Line 146
	or	eax, -1
$LN1@lookupUnic:
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lookupUnicode@UnmappedDataFont@touchgfx@@IBEHG@Z ENDP	; touchgfx::UnmappedDataFont::lookupUnicode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@UnmappedDataFont@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@UnmappedDataFont@touchgfx@@UBEPBGXZ PROC	; touchgfx::UnmappedDataFont::getGSUBTable, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\include\fonts\UnmappedDataFont.hpp
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __97B5739F_UnmappedDataFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
; Line 92
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@UnmappedDataFont@touchgfx@@UBEPBGXZ ENDP	; touchgfx::UnmappedDataFont::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@UnmappedDataFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_i$1 = -32						; size = 2
_kerndata$ = -20					; size = 4
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@UnmappedDataFont@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC ; touchgfx::UnmappedDataFont::getKerning, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\src\UnmappedDataFont.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __551DC49D_UnmappedDataFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 48
	cmp	DWORD PTR _glyph$[ebp], 0
	je	SHORT $LN6@getKerning
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN5@getKerning
$LN6@getKerning:
; Line 50
	xor	al, al
	jmp	SHORT $LN1@getKerning
$LN5@getKerning:
; Line 53
	mov	ecx, DWORD PTR _glyph$[ebp]
	call	?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ ; touchgfx::GlyphNode::kerningTablePos
	movzx	eax, ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _kerndata$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	cx, BYTE PTR [eax+12]
	mov	WORD PTR _i$1[ebp], cx
	jmp	SHORT $LN4@getKerning
$LN2@getKerning:
	mov	ax, WORD PTR _i$1[ebp]
	sub	ax, 1
	mov	WORD PTR _i$1[ebp], ax
	mov	ecx, DWORD PTR _kerndata$[ebp]
	add	ecx, 4
	mov	DWORD PTR _kerndata$[ebp], ecx
$LN4@getKerning:
	movzx	eax, WORD PTR _i$1[ebp]
	test	eax, eax
	jle	SHORT $LN3@getKerning
; Line 56
	movzx	eax, WORD PTR _prevChar$[ebp]
	mov	ecx, DWORD PTR _kerndata$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jne	SHORT $LN7@getKerning
; Line 58
	mov	eax, DWORD PTR _kerndata$[ebp]
	mov	al, BYTE PTR [eax+2]
	jmp	SHORT $LN1@getKerning
$LN7@getKerning:
; Line 60
	movzx	eax, WORD PTR _prevChar$[ebp]
	mov	ecx, DWORD PTR _kerndata$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jge	SHORT $LN8@getKerning
; Line 62
	jmp	SHORT $LN3@getKerning
$LN8@getKerning:
; Line 64
	jmp	SHORT $LN2@getKerning
$LN3@getKerning:
; Line 65
	xor	al, al
$LN1@getKerning:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@UnmappedDataFont@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP ; touchgfx::UnmappedDataFont::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPixelData@UnmappedDataFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_table$ = -20						; size = 4
_this$ = -8						; size = 4
_glyph$ = 8						; size = 4
?getPixelData@UnmappedDataFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z PROC ; touchgfx::UnmappedDataFont::getPixelData, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\src\UnmappedDataFont.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __551DC49D_UnmappedDataFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _table$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [eax+4]
	cdq
	and	edx, 2047				; 000007ffH
	add	eax, edx
	sar	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _glyph$[ebp]
	add	eax, DWORD PTR [edx]
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPixelData@UnmappedDataFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z ENDP ; touchgfx::UnmappedDataFont::getPixelData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@UnmappedDataFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
_TEXT	SEGMENT
_flashReader$1 = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_pixelData$ = 12					; size = 4
_bitsPerPixel$ = 16					; size = 4
?getGlyph@UnmappedDataFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z PROC ; touchgfx::UnmappedDataFont::getGlyph, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\src\UnmappedDataFont.cpp
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __551DC49D_UnmappedDataFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 25
	movzx	eax, WORD PTR _unicode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lookupUnicode@UnmappedDataFont@touchgfx@@IBEHG@Z ; touchgfx::UnmappedDataFont::lookupUnicode
	mov	DWORD PTR _index$[ebp], eax
; Line 27
	cmp	DWORD PTR _index$[ebp], -1
	je	SHORT $LN2@getGlyph
; Line 30
	call	?getFlashReader@ApplicationFontProvider@@SAPAVFlashDataReader@touchgfx@@XZ ; ApplicationFontProvider::getFlashReader
	mov	DWORD PTR _flashReader$1[ebp], eax
; Line 31
	mov	esi, esp
	push	14					; 0000000eH
	push	OFFSET ?glyphNodeBuffer@UnmappedDataFont@touchgfx@@1UGlyphNode@2@A ; touchgfx::UnmappedDataFont::glyphNodeBuffer
	imul	eax, DWORD PTR _index$[ebp], 14
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	push	eax
	mov	edx, DWORD PTR _flashReader$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flashReader$1[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 33
	mov	esi, esp
	push	OFFSET ?glyphNodeBuffer@UnmappedDataFont@touchgfx@@1UGlyphNode@2@A ; touchgfx::UnmappedDataFont::glyphNodeBuffer
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pixelData$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _bitsPerPixel$[ebp]
	mov	BYTE PTR [ecx], al
; Line 35
	mov	eax, OFFSET ?glyphNodeBuffer@UnmappedDataFont@touchgfx@@1UGlyphNode@2@A ; touchgfx::UnmappedDataFont::glyphNodeBuffer
	jmp	SHORT $LN1@getGlyph
$LN2@getGlyph:
; Line 37
	xor	eax, eax
$LN1@getGlyph:
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getGlyph@UnmappedDataFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ENDP ; touchgfx::UnmappedDataFont::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnmappedDataFont@touchgfx@@QAE@PBUGlyphNode@1@PBGGGEEEEEPBQBEPBUKerningNode@1@GGQBG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_list$ = 8						; size = 4
_unicodeList$ = 12					; size = 4
_size$ = 16						; size = 2
_height$ = 20						; size = 2
_pixBelowBase$ = 24					; size = 1
_bitsPerPixel$ = 28					; size = 1
_byteAlignRow$ = 32					; size = 1
_maxLeft$ = 36						; size = 1
_maxRight$ = 40						; size = 1
_glyphDataList$ = 44					; size = 4
_kerningList$ = 48					; size = 4
_fallbackChar$ = 52					; size = 2
_ellipsisChar$ = 56					; size = 2
_gsubData$ = 60						; size = 4
??0UnmappedDataFont@touchgfx@@QAE@PBUGlyphNode@1@PBGGGEEEEEPBQBEPBUKerningNode@1@GGQBG@Z PROC ; touchgfx::UnmappedDataFont::UnmappedDataFont, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\generated\fonts\src\UnmappedDataFont.cpp
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __551DC49D_UnmappedDataFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 13
	movzx	eax, WORD PTR _ellipsisChar$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fallbackChar$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _maxRight$[ebp]
	push	edx
	movzx	eax, BYTE PTR _maxLeft$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteAlignRow$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bitsPerPixel$[ebp]
	push	edx
	movzx	eax, BYTE PTR _pixBelowBase$[ebp]
	push	eax
	movzx	ecx, WORD PTR _height$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Font@touchgfx@@IAE@GEEEEEGG@Z	; touchgfx::Font::Font
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnmappedDataFont@touchgfx@@6B@
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _size$[ebp]
	mov	WORD PTR [eax+20], cx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _unicodeList$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _glyphDataList$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _kerningList$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 19
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _gsubData$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
??0UnmappedDataFont@touchgfx@@QAE@PBUGlyphNode@1@PBGGGEEEEEPBQBEPBUKerningNode@1@GGQBG@Z ENDP ; touchgfx::UnmappedDataFont::UnmappedDataFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Font@touchgfx@@IAE@GEEEEEGG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_height$ = 8						; size = 2
_pixBelowBase$ = 12					; size = 1
_bitsPerPixel$ = 16					; size = 1
_byteAlignRow$ = 20					; size = 1
_maxLeft$ = 24						; size = 1
_maxRight$ = 28						; size = 1
_fallbackChar$ = 32					; size = 2
_ellipsisChar$ = 36					; size = 2
??0Font@touchgfx@@IAE@GEEEEEGG@Z PROC			; touchgfx::Font::Font, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 462
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 454
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _height$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _pixBelowBase$[ebp]
	mov	BYTE PTR [eax+6], cl
; Line 456
	mov	al, BYTE PTR _bitsPerPixel$[ebp]
	and	al, 127					; 0000007fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+7]
	and	dl, 128					; 00000080H
	or	dl, al
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+7], dl
; Line 457
	mov	al, BYTE PTR _byteAlignRow$[ebp]
	and	al, 1
	shl	al, 7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+7]
	and	dl, 127					; 0000007fH
	or	dl, al
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+7], dl
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _maxLeft$[ebp]
	mov	BYTE PTR [eax+8], cl
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _maxRight$[ebp]
	mov	BYTE PTR [eax+9], cl
; Line 460
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _fallbackChar$[ebp]
	mov	WORD PTR [eax+10], cx
; Line 461
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _ellipsisChar$[ebp]
	mov	WORD PTR [eax+12], cx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0Font@touchgfx@@IAE@GEEEEEGG@Z ENDP			; touchgfx::Font::Font
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@Font@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@Font@touchgfx@@UBEPBGXZ PROC		; touchgfx::Font::getGSUBTable, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 389
	xor	eax, eax
; Line 390
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@Font@touchgfx@@UBEPBGXZ ENDP		; touchgfx::Font::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC	; touchgfx::Font::getKerning, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 369
	xor	al, al
; Line 370
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP	; touchgfx::Font::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByteAlignRow@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getByteAlignRow@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getByteAlignRow, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 332
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	shr	al, 7
	and	al, 1
; Line 333
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getByteAlignRow@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getByteAlignRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBitsPerPixel@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBitsPerPixel@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getBitsPerPixel, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	and	al, 127					; 0000007fH
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBitsPerPixel@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getBitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ PROC	; touchgfx::Font::getMinimumTextHeight, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	add	eax, edx
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ ENDP	; touchgfx::Font::getMinimumTextHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontHeight@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFontHeight, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontHeight@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFontHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEllipsisChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEllipsisChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getEllipsisChar, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+12]
; Line 212
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEllipsisChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getEllipsisChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFallbackChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFallbackChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFallbackChar, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 198
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+10]
; Line 199
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFallbackChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFallbackChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_glyph$ = -44						; size = 4
_bitsPerPixelDummy$ = -29				; size = 1
_dummyPixelDataPointer$ = -20				; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC	; touchgfx::Font::getGlyph, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 179
	movzx	eax, WORD PTR _unicode$[ebp]
	test	eax, eax
	jne	SHORT $LN2@getGlyph
; Line 181
	xor	eax, eax
	jmp	SHORT $LN1@getGlyph
$LN2@getGlyph:
; Line 183
	mov	DWORD PTR _dummyPixelDataPointer$[ebp], 0
; Line 184
	mov	BYTE PTR _bitsPerPixelDummy$[ebp], 0
; Line 185
	mov	esi, esp
	lea	eax, DWORD PTR _bitsPerPixelDummy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dummyPixelDataPointer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _glyph$[ebp], eax
; Line 186
	mov	eax, DWORD PTR _glyph$[ebp]
$LN1@getGlyph:
; Line 187
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getGlyph
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@getGlyph:
	DD	2
	DD	$LN6@getGlyph
$LN6@getGlyph:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getGlyph
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN5@getGlyph
$LN5@getGlyph:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN4@getGlyph:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP	; touchgfx::Font::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Font@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Font@touchgfx@@UAE@XZ PROC				; touchgfx::Font::~Font, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Font@touchgfx@@UAE@XZ ENDP				; touchgfx::Font::~Font
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ PROC	; touchgfx::GlyphNode::kerningTablePos, COMDAT
; _this$ = ecx
; File C:\TouchGFXProjects\MyApplication_4\touchgfx\framework\include\touchgfx\Font.hpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D174C65_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+13]
	and	eax, 7
	shl	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+11]
	or	eax, edx
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ ENDP	; touchgfx::GlyphNode::kerningTablePos
_TEXT	ENDS
END
